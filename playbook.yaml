---
- name: Execute script on F5 BIG-IP
  hosts: bigip_hosts
  gather_facts: no
  tasks:
    - name: Copy the script to the BIG-IP
      ansible.builtin.copy:
        src: mitigation.sh
        dest: /tmp/mitigation.sh
        mode: '0777'
      delegate_to: "{{ inventory_hostname }}"

    - name: Execute the script on the BIG-IP
      ansible.builtin.shell:
        cmd: /tmp/mitigation.sh
      delegate_to: "{{ inventory_hostname }}"
      register: script_result

    - name: Save script output messages
      set_fact:
        host_script_output: "{{ script_result.stdout.split('\n') }}"
      when: script_result.stdout

    - name: Aggregate script output messages on localhost
      set_fact:
        script_output_messages: "{{ script_output_messages|default([]) + [{'host': inventory_hostname, 'msg': item}] }}"
      loop: "{{ host_script_output }}"
      delegate_to: localhost
      run_once: false


    - name: Export results to CSV
      ansible.builtin.template:
        src: output_template.j2
        dest: output.csv
      delegate_to: localhost
      run_once: true
      vars:
        script_results: "{{ script_output_messages }}"



    - name: Display the script error output
      debug:
        msg: "{{ item }}"
      loop: "{{ script_result.stderr.split('\n') }}"
      when: script_result.stderr
    - name: Grep for secret pattern in specified files
      ansible.builtin.shell:
        cmd: grep -m1 -ioE '(required)?secret.*' /config/httpd/conf.d/proxy_ajp.conf /etc/tomcat/server.xml
      delegate_to: "{{ inventory_hostname }}"
      register: grep_result

    - name: Display the grep output
      debug:
        msg: "{{ item }}"
      loop: "{{ grep_result.stdout.split('\n') }}"
      when: grep_result.stdout

    - name: Display the grep error output
      debug:
        msg: "{{ item }}"
      loop: "{{ grep_result.stderr.split('\n') }}"
      when: grep_result.stderr

    - name: Remove the script from the BIG-IP
      ansible.builtin.file:
        path: /tmp/mitigation.sh
        state: absent
      delegate_to: "{{ inventory_hostname }}"
